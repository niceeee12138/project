<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smallcompany.nice.dao.PeolpletypeMapper">
    <resultMap id="BaseResultMap" type="com.smallcompany.nice.model.Peolpletype">
        <id column="pt_id" property="ptId" jdbcType="INTEGER"/>
        <result column="pt_sort" property="ptSort" jdbcType="INTEGER"/>
        <result column="pt_name" property="ptName" jdbcType="VARCHAR"/>
        <result column="pt_status" property="ptStatus" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        pt_id
        , pt_sort, pt_name, pt_status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from peopletype
        where pt_id = #{ptId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from peopletype
        where pt_id = #{ptId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smallcompany.nice.model.Peolpletype" useGeneratedKeys="true" keyProperty="ptId">
        insert into peopletype (pt_id, pt_sort, pt_name,pt_status)
        values (#{ptId,jdbcType=INTEGER}, #{ptSort,jdbcType=INTEGER}, #{ptName,jdbcType=VARCHAR},#{ptStatus,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.smallcompany.nice.model.Peolpletype">
        insert into peopletype
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ptId != null">
                pt_id,
            </if>
            <if test="ptSort != null">
                pt_sort,
            </if>
            <if test="ptName != null">
                pt_name,
            </if>
            <if test="ptStatus != null">
                pt_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ptId != null">
                #{ptId,jdbcType=INTEGER},
            </if>
            <if test="ptSort != null">
                #{ptSort,jdbcType=INTEGER},
            </if>
            <if test="ptName != null">
                #{ptName,jdbcType=VARCHAR},
            </if>
            <if test="ptStatus != null">
                #{ptStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smallcompany.nice.model.Peolpletype">
        update peopletype
        <set>
            <if test="ptSort != null">
                pt_sort = #{ptSort,jdbcType=INTEGER},
            </if>
            <if test="ptName != null">
                pt_name = #{ptName,jdbcType=VARCHAR},
            </if>
            <if test="ptStatus != null">
                pt_status = #{ptStatus,jdbcType=INTEGER},
            </if>
        </set>
        where pt_id = #{ptId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smallcompany.nice.model.Peolpletype">
        update peopletype
        set pt_sort   = #{ptSort,jdbcType=INTEGER},
            pt_name   = #{ptName,jdbcType=VARCHAR},
            pt_status = #{ptStatus,jdbcType=INTEGER}
        where pt_id = #{ptId,jdbcType=INTEGER}
    </update>

    <select id="selectByPtName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from peopletype
        where pt_name = #{ptName,jdbcType=VARCHAR}
    </select>

    <select id="getAllType" resultMap="BaseResultMap">
        select * from peopletype
    </select>


</mapper>